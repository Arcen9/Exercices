import java.util.Scanner;

class WritingMaterials {
    private String name;
    private String color;
    private int price;
    private double length;
    boolean draw;
    static int counter = 0;
    private int id;
    public void display(){
        System.out.println("Name: " + this.name + ", Color: " + this.color +", Length: " + this.length +
                ", Price: " + this.price+ ", Can it draw: " + this.draw);
    }
    public void replace_rod(String newColor){
        this.color = newColor;
    }
    public void priceUp(int priceChange){
        this.price += priceChange;
    }
    public void priceDown(int priceChange){
        this.price -= priceChange;
    }
    public void draw(){
        if(this.draw) System.out.println(this.name + " drew one line. It has " + this.color + " color");
        else System.out.println(this.name + " can't draw");
    }
    public void draw(int n){
        if(this.draw) System.out.println(this.name + " drew " + n + " line(s). They have " + this.color + " color");
        else System.out.println(this.name + " can't draw");
    }
    public void draw(String color){
        if(this.draw) System.out.println(this.name + " drew one line. It has " + color + " color");
        else System.out.println(this.name + " can't draw");
    }
    public void draw(String color, int n){
        if(this.draw) System.out.println(this.name + " drew " + n + " line(s). They have " + color + " color");
        else System.out.println(this.name + " can't draw");
    }
    public String getName(){
        return this.name;
    }
    public void setName(String name){
        this.name = name;
    }
    public String getColor(){
        return this.color;
    }
    public void setColor(String color) {
        this.color = color;
    }
    public void setPrice(int price){
        this.price = price;
    }
    public double getPrice(){
        return this.price;
    }
    public double getLength(){
        return this.length;
    }
    public void setLength(double length){
        this.length = length;
    }
    public boolean isDraw(){
        return this.draw;
    }
    public void setDraw(boolean isDraw){
        this.draw = isDraw;
    }
    WritingMaterials(String name, String color){
        this.name = name;
        this.color = color;
    }
    WritingMaterials(String name, int price){
        this.name = name;
        this.price = price;
        this.color = "No Color";
    }
    WritingMaterials(int price, double length, boolean draw){
        this.price = price;
        this.length = length;
        this.draw = draw;
        this.color = "No Color";
        this.name = "No Name";
    }
    WritingMaterials(String name, String color, int price, double length, boolean draw){
        this.color = color;
        this.name = name;
        this.price = price;
        this.length = length;
        this.draw = draw;
    }
    WritingMaterials(){}
    {
        id = ++counter;
        this.color = "def";
        this.name = "casual item";
    }
    final static String stringDescription = "This is the class called : WritingMaterials";
    public String toString(){
        return this.id + " Name: " + this.name + ", Color: " + this.color +", Length: " + this.length +
        ", Price: " + this.price+ ", Can it draw: " + this.draw;
    }
    public static int numOfMaterials(){
        return counter;
    }
}

class Pen extends WritingMaterials{
    {
        this.setDraw(true);
        this.countColor = 1;
    }
    int countColor;
    boolean auto;
    public void setCountColor(int n){
        this.countColor = n;
    }
    public int getCountColor(){
        return this.countColor;
    }
    public void setAuto(boolean set){
        this.auto = set;
    }
    public boolean isAuto(){
        return this.auto;
    }
    public void writeMyName(){
        System.out.println("Arseny");
    }
    public void display(){
        System.out.print("This is " + getClass().getSimpleName() + ". It has " + getCountColor() + " colours " + "is Auto - " + isAuto() + " ");
        super.display();
    }
}

final class Ruler extends WritingMaterials{
    {
        this.draw = false;
    }
    double length;
    boolean wood;
    public void setLength(double n){
        this.length = n;
    }
    public double getLength(){
        return this.length;
    }
    public void setWood(boolean set){
        this.wood = set;
    }
    public boolean isWood(){
        return this.wood;
    }
    public void measure(){
        System.out.println("We'll measure now!");
    }
    public void display(){
        System.out.print("This is " + getClass().getSimpleName() + ". It has " + getLength() + " sm length " + "is wooden - " + isWood() + " ");
        super.display();
    }
}

class Divider extends WritingMaterials{
    {
        this.draw = true;
    }
    String dividerType;
    boolean metal;
    public void setDividerType(String set){
        this.dividerType = set;
    }
    public String getDividerType(){
        return this.dividerType;
    }
    public void setMetal(boolean set){
        this.metal = set;
    }
    public boolean isMetal(){
        return this.metal;
    }
    final public void draw_circle(){
        System.out.println("Circle drawn");
    }
    public void display(){
        System.out.print("This is " + getClass().getSimpleName() + ". It has " + getDividerType() + "is metal - " + isMetal() + " ");
        super.display();
    }
}

class MyProgram{
    public static void main(String[] args) {
        WritingMaterials wm = new WritingMaterials();
        wm.display();
        Pen pencil = new Pen();
        pencil.display();
        System.out.println(wm.toString());
        System.out.println(pencil.toString());
        System.out.println(WritingMaterials.stringDescription);
        System.out.println(WritingMaterials.numOfMaterials());
    }
}
